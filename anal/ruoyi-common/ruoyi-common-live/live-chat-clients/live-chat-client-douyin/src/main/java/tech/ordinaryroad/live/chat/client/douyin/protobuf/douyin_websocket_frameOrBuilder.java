/*
 * MIT License
 *
 * Copyright (c) 2023 OrdinaryRoad
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: douyin_websocket_frame.proto

package tech.ordinaryroad.live.chat.client.douyin.protobuf;

public interface douyin_websocket_frameOrBuilder extends
    // @@protoc_insertion_point(interface_extends:tech.ordinaryroad.live.chat.client.douyin.protobuf.douyin_websocket_frame)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>uint64 seq_id = 1;</code>
   * @return The seqId.
   */
  long getSeqId();

  /**
   * <code>uint64 log_id = 2;</code>
   * @return The logId.
   */
  long getLogId();

  /**
   * <code>uint64 service = 3;</code>
   * @return The service.
   */
  long getService();

  /**
   * <code>uint64 method = 4;</code>
   * @return The method.
   */
  long getMethod();

  /**
   * <code>map&lt;string, string&gt; headers_list = 5;</code>
   */
  int getHeadersListCount();
  /**
   * <code>map&lt;string, string&gt; headers_list = 5;</code>
   */
  boolean containsHeadersList(
      java.lang.String key);
  /**
   * Use {@link #getHeadersListMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getHeadersList();
  /**
   * <code>map&lt;string, string&gt; headers_list = 5;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getHeadersListMap();
  /**
   * <code>map&lt;string, string&gt; headers_list = 5;</code>
   */
  /* nullable */
java.lang.String getHeadersListOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <code>map&lt;string, string&gt; headers_list = 5;</code>
   */
  java.lang.String getHeadersListOrThrow(
      java.lang.String key);

  /**
   * <code>string payload_encoding = 6;</code>
   * @return The payloadEncoding.
   */
  java.lang.String getPayloadEncoding();
  /**
   * <code>string payload_encoding = 6;</code>
   * @return The bytes for payloadEncoding.
   */
  com.google.protobuf.ByteString
      getPayloadEncodingBytes();

  /**
   * <code>string payload_type = 7;</code>
   * @return The payloadType.
   */
  java.lang.String getPayloadType();
  /**
   * <code>string payload_type = 7;</code>
   * @return The bytes for payloadType.
   */
  com.google.protobuf.ByteString
      getPayloadTypeBytes();

  /**
   * <code>bytes payload = 8;</code>
   * @return The payload.
   */
  com.google.protobuf.ByteString getPayload();
}
